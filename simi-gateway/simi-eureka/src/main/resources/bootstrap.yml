server:
  port: 48992
spring:
  application:
    name: eurekaserver       # Sets the name of the current application. This name will be displayed in Eureka and will be used to fetch paths later.
eureka:
  instance:
    hostname: localhost      # Hostname
    prefer-ip-address: false   # Whether to automatically register the current instance's IP address with Eureka. Default is false, registering the hostname instead.
    ip-address: 127.0.0.1     # Sets the IP address of the current instance
    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}  # Modifies the instance-id display in the web console
    lease-renewal-interval-in-seconds: 30  # The interval in seconds at which Eureka clients send heartbeats to the Eureka server
    lease-expiration-duration-in-seconds: 90  # If no heartbeat is received from a Eureka client within 90 seconds, the service will be removed
  server:
    enable-self-preservation: true  # Enables the self-preservation mode, default is true
    eviction-interval-timer-in-ms: 60000  # Interval for cleanup (default is 60,000 milliseconds)
  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/  # Eureka server address for communication; can be multiple
    register-with-eureka: false  # Whether to register the service path with Eureka (not required for the server, set to false)
    fetch-registry: false  # Whether to fetch the registry from Eureka (not required for the server, set to false)
