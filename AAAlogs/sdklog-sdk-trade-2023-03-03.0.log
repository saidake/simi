2023-03-03 01:16:28.453 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:16:30.574 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:16:30.575 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:16:30.577 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:16:31.479 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:16:31.479 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:16:31.542 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 3 JPA repository interfaces.
2023-03-03 01:16:31.550 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:16:31.550 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:16:31.560 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:16:31.561 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:16:31.561 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:16:31.562 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:16:31.870 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:16:32.262 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:16:32.267 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:16:32.267 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:16:32.268 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:16:32.351 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:16:32.351 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1763 ms
2023-03-03 01:16:32.519 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:16:32.521 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:16:32.646 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:16:32.650 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:16:32.685 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:16:32.722 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:16:32.840 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:16:32.947 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:16:33.468 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:16:33.478 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:16:34.106 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:16:34.275 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:16:34.367 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:16:34.385 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:16:36.125 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:16:36.321 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:16:36.334 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400d9f23090cd4e7696da2e', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:16:36.443 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:16:38.689 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:16:38.748 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:16:38.791 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:16:38.817 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:16:38.821 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:16:38.837 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:16:40.133 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:16:40.135 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:16:40.137 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:16:40.140 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677777400140 with initial instances count: 1
2023-03-03 01:16:40.144 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:16:40.144 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677777400144, current=UP, previous=STARTING]
2023-03-03 01:16:40.145 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:16:40.146 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:16:40.161 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:16:40.162 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:16:40.181 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:16:41.933 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.474 seconds (JVM running for 19.278)
2023-03-03 01:17:17.406 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:17:17.406 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:17:17.408 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-03-03 01:19:43.703 - sdk-trade - INFO  --- [http-nio-48124-exec-5] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:19:45.979 - sdk-trade - ERROR --- [http-nio-48124-exec-5] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": SDK-GENERATOR; nested exception is java.net.UnknownHostException: SDK-GENERATOR] with root cause
java.net.UnknownHostException: SDK-GENERATOR
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$e74cbf59.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:20:18.872 - sdk-trade - INFO  --- [http-nio-48124-exec-6] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:20:21.150 - sdk-trade - ERROR --- [http-nio-48124-exec-6] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": SDK-GENERATOR; nested exception is java.net.UnknownHostException: SDK-GENERATOR] with root cause
java.net.UnknownHostException: SDK-GENERATOR
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$e74cbf59.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:21:38.844 - sdk-trade - INFO  --- [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:24:02.949 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:24:05.045 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:24:05.046 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:24:05.047 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:24:05.969 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:24:05.970 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:24:06.035 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 3 JPA repository interfaces.
2023-03-03 01:24:06.041 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:24:06.041 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:24:06.050 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:24:06.050 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:24:06.051 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:24:06.051 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:24:06.304 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:24:06.685 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:24:06.691 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:24:06.691 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:24:06.691 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:24:06.791 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:24:06.791 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1733 ms
2023-03-03 01:24:06.964 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:24:06.965 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:24:07.076 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:24:07.079 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:24:07.114 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:24:07.152 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:24:07.266 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:24:07.390 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:24:07.923 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:24:07.933 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:24:08.578 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:24:08.746 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:24:08.831 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:24:08.851 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:24:10.691 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:24:10.800 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400dbb8485a4168cad67dfb', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:24:10.905 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:24:11.035 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:24:13.381 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:24:13.440 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:24:13.481 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:24:13.507 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:24:13.510 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:24:13.527 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:24:13.527 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:24:13.528 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:24:13.528 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:24:13.528 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:24:13.528 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:24:13.528 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:24:14.804 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:24:14.806 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:24:14.808 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:24:14.811 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677777854810 with initial instances count: 2
2023-03-03 01:24:14.814 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:24:14.814 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677777854814, current=UP, previous=STARTING]
2023-03-03 01:24:14.815 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:24:14.816 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:24:14.832 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:24:14.833 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:24:14.852 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:24:16.666 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.8 seconds (JVM running for 19.718)
2023-03-03 01:24:24.923 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:24:24.923 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:24:24.925 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-03-03 01:24:24.951 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:24:27.089 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@8a7a4b3 instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@628a57f8]). Returning all found instances.
2023-03-03 01:24:29.121 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$68854fc2.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:26:15.375 - sdk-trade - INFO  --- [http-nio-48124-exec-3] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:26:17.418 - sdk-trade - WARN  --- [http-nio-48124-exec-3] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@95df58c instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@4c5f7ac3]). Returning all found instances.
2023-03-03 01:26:19.442 - sdk-trade - ERROR --- [http-nio-48124-exec-3] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$68854fc2.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:29:13.533 - sdk-trade - INFO  --- [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:32:06.994 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:32:09.108 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:32:09.109 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:32:09.111 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:32:09.981 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:32:09.981 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:32:10.052 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 3 JPA repository interfaces.
2023-03-03 01:32:10.058 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:32:10.058 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:32:10.065 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:10.065 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:10.066 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:10.066 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:32:10.308 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:32:10.674 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:32:10.679 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:32:10.679 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:32:10.679 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:32:10.760 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:32:10.760 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1638 ms
2023-03-03 01:32:10.921 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:32:10.923 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:32:11.021 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:32:11.024 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:32:11.059 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:32:11.099 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:32:11.213 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:32:11.314 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:32:11.793 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:32:11.803 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:32:12.417 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:32:12.586 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:32:12.675 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:32:12.691 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:32:14.454 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:32:14.654 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400dd9c5b870c47ffb9664a', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:32:14.664 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:32:14.791 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:32:17.102 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:32:17.167 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:32:17.209 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:32:17.236 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:32:17.239 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:32:17.256 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:32:18.600 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:32:18.603 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:32:18.604 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:32:18.607 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778338607 with initial instances count: 2
2023-03-03 01:32:18.611 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:32:18.611 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778338611, current=UP, previous=STARTING]
2023-03-03 01:32:18.612 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:32:18.612 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:32:18.628 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:32:18.628 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:32:18.650 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:32:20.419 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.326 seconds (JVM running for 19.13)
2023-03-03 01:32:29.168 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:32:29.168 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:32:29.170 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-03-03 01:32:29.195 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:32:31.322 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@6ba17b5d instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@a307c5c]). Returning all found instances.
2023-03-03 01:32:33.369 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$f17614e5.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:32:48.056 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:32:50.177 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:32:50.177 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:32:50.179 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:32:51.225 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:32:51.226 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:32:51.300 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 3 JPA repository interfaces.
2023-03-03 01:32:51.306 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:32:51.307 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:32:51.315 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:51.315 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:51.316 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:32:51.316 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:32:51.588 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:32:52.046 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:32:52.053 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:32:52.053 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:32:52.053 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:32:52.144 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:32:52.144 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1952 ms
2023-03-03 01:32:52.322 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:32:52.324 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:32:52.410 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:32:52.414 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:32:52.453 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:32:52.501 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:32:52.644 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:32:52.757 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:32:53.363 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:32:53.375 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:32:54.062 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:32:54.256 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:32:54.356 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:32:54.373 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:32:56.158 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:32:56.322 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400ddc6c08f160a8381866e', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:32:56.380 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:32:56.515 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:32:58.836 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:32:58.905 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:32:58.958 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:32:58.990 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:32:58.993 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:32:59.012 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:33:00.348 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:33:00.351 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:33:00.353 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:33:00.358 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778380357 with initial instances count: 2
2023-03-03 01:33:00.363 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:33:00.364 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778380364, current=UP, previous=STARTING]
2023-03-03 01:33:00.365 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:33:00.365 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:33:00.382 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:33:00.383 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:33:00.405 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:33:02.174 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 18.198 seconds (JVM running for 20.188)
2023-03-03 01:35:06.175 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application SDK-TRADE with eureka with status DOWN
2023-03-03 01:35:06.175 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778506175, current=DOWN, previous=UP]
2023-03-03 01:35:06.176 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:35:06.192 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:35:07.266 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:35:07.269 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-03-03 01:35:07.274 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-03-03 01:35:07.275 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2023-03-03 01:35:10.277 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-03 01:35:55.909 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:35:58.008 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:35:58.009 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:35:58.010 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:35:58.918 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:35:58.919 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:35:58.979 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
2023-03-03 01:35:58.985 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:35:58.985 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:35:58.994 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:35:58.995 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:35:58.995 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:35:58.996 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:35:59.254 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:35:59.645 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:35:59.653 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:35:59.654 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:35:59.654 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:35:59.741 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:35:59.741 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1720 ms
2023-03-03 01:35:59.910 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:35:59.912 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:35:59.979 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:35:59.981 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:36:00.018 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:36:00.062 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:36:00.181 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:36:00.318 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:36:00.872 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:36:00.886 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:36:01.560 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:36:01.734 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:36:01.828 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:36:01.843 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:36:03.709 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:36:03.803 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400de8199893160830fafa7', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:36:03.935 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:36:04.056 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:36:06.610 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:36:06.681 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:36:06.733 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:36:06.760 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:36:06.764 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:36:06.780 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:36:08.072 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:36:08.074 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:36:08.076 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:36:08.079 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778568079 with initial instances count: 1
2023-03-03 01:36:08.084 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:36:08.084 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778568084, current=UP, previous=STARTING]
2023-03-03 01:36:08.085 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:36:08.086 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:36:08.101 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:36:08.102 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:36:08.123 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:36:09.915 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 18.22 seconds (JVM running for 20.14)
2023-03-03 01:38:04.190 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:38:04.190 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:38:04.192 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-03-03 01:38:04.221 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:38:06.354 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@4543c577 instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@534e1761]). Returning all found instances.
2023-03-03 01:38:08.400 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$7e6d932f.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:39:36.450 - sdk-trade - INFO  --- [Thread-2] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application SDK-TRADE with eureka with status DOWN
2023-03-03 01:39:36.451 - sdk-trade - INFO  --- [Thread-2] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778776451, current=DOWN, previous=UP]
2023-03-03 01:39:36.451 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:39:36.460 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:39:37.846 - sdk-trade - INFO  --- [Thread-2] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:39:37.852 - sdk-trade - INFO  --- [Thread-2] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-03-03 01:39:37.860 - sdk-trade - INFO  --- [Thread-2] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-03-03 01:39:37.864 - sdk-trade - INFO  --- [Thread-2] com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2023-03-03 01:39:40.881 - sdk-trade - WARN  --- [DiscoveryClient-1] com.netflix.discovery.TimedSupervisorTask - task supervisor shutting down, can't accept the task
2023-03-03 01:39:40.882 - sdk-trade - INFO  --- [Thread-2] com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-03 01:39:40.900 - sdk-trade - INFO  --- [Thread-2] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - deregister  status: 200
2023-03-03 01:39:40.903 - sdk-trade - INFO  --- [Thread-2] com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-03 01:39:44.648 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:39:46.701 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:39:46.701 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:39:46.702 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:39:46.855 - sdk-trade - ERROR --- [restartedMain] org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalStateException: Unable to read meta-data for class com.saidake.common.core.util.app.SpringContextUtil
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass.getAnnotationMetadata(AutoConfigurationSorter.java:237)
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass.getOrder(AutoConfigurationSorter.java:208)
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass.access$000(AutoConfigurationSorter.java:154)
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter.lambda$getInPriorityOrder$0(AutoConfigurationSorter.java:63)
	at java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)
	at java.util.TimSort.sort(TimSort.java:234)
	at java.util.Arrays.sort(Arrays.java:1512)
	at java.util.ArrayList.sort(ArrayList.java:1462)
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter.getInPriorityOrder(AutoConfigurationSorter.java:62)
	at org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup.sortAutoConfigurations(AutoConfigurationImportSelector.java:468)
	at org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup.selectImports(AutoConfigurationImportSelector.java:453)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGrouping.getImports(ConfigurationClassParser.java:882)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorGroupingHandler.processGroupImports(ConfigurationClassParser.java:809)
	at org.springframework.context.annotation.ConfigurationClassParser$DeferredImportSelectorHandler.process(ConfigurationClassParser.java:780)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:193)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:331)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:247)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:311)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:112)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:746)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:564)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:447)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1356)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1345)
	at com.saidake.trade.TradeApp.main(TradeApp.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.io.FileNotFoundException: class path resource [com/saidake/common/core/util/app/SpringContextUtil.class] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:199)
	at org.springframework.core.type.classreading.SimpleMetadataReader.getClassReader(SimpleMetadataReader.java:55)
	at org.springframework.core.type.classreading.SimpleMetadataReader.<init>(SimpleMetadataReader.java:49)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:103)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.createMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:86)
	at org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory.getMetadataReader(ConcurrentReferenceCachingMetadataReaderFactory.java:73)
	at org.springframework.core.type.classreading.SimpleMetadataReaderFactory.getMetadataReader(SimpleMetadataReaderFactory.java:81)
	at org.springframework.boot.autoconfigure.AutoConfigurationSorter$AutoConfigurationClass.getAnnotationMetadata(AutoConfigurationSorter.java:233)
	... 32 common frames omitted
2023-03-03 01:39:48.333 - sdk-trade - ERROR --- [restartedMain] org.springframework.boot.SpringApplication - Application run failed
java.lang.IllegalArgumentException: Unable to instantiate org.springframework.boot.env.EnvironmentPostProcessor [com.saidake.common.log.init.ApplicationLoggerInitializer]
	at org.springframework.boot.util.Instantiator.instantiate(Instantiator.java:131)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at org.springframework.boot.util.Instantiator.instantiate(Instantiator.java:118)
	at org.springframework.boot.util.Instantiator.instantiate(Instantiator.java:103)
	at org.springframework.boot.env.ReflectionEnvironmentPostProcessorsFactory.getEnvironmentPostProcessors(ReflectionEnvironmentPostProcessorsFactory.java:72)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.getEnvironmentPostProcessors(EnvironmentPostProcessorApplicationListener.java:122)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEnvironmentPreparedEvent(EnvironmentPostProcessorApplicationListener.java:100)
	at org.springframework.boot.env.EnvironmentPostProcessorApplicationListener.onApplicationEvent(EnvironmentPostProcessorApplicationListener.java:87)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:82)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:63)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:117)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:111)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:62)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:374)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:332)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:143)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.bootstrapServiceContext(BootstrapApplicationListener.java:197)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:114)
	at org.springframework.cloud.bootstrap.BootstrapApplicationListener.onApplicationEvent(BootstrapApplicationListener.java:77)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:131)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:82)
	at org.springframework.boot.SpringApplicationRunListeners.lambda$environmentPrepared$2(SpringApplicationRunListeners.java:63)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:117)
	at org.springframework.boot.SpringApplicationRunListeners.doWithListeners(SpringApplicationRunListeners.java:111)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:62)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:374)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:332)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1356)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1345)
	at com.saidake.trade.TradeApp.main(TradeApp.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ClassNotFoundException: com.saidake.common.log.init.ApplicationLoggerInitializer
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:145)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:284)
	at org.springframework.boot.util.Instantiator$TypeSupplier$1.get(Instantiator.java:210)
	at org.springframework.boot.util.Instantiator.instantiate(Instantiator.java:125)
	... 50 common frames omitted
2023-03-03 01:40:01.592 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:40:03.624 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:40:03.624 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:40:03.625 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:40:04.289 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:04.290 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:40:04.318 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 3 JPA repository interfaces.
2023-03-03 01:40:04.319 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:04.320 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:40:04.326 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:04.326 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:04.326 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:04.327 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:40:04.443 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:40:04.534 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:40:04.535 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:40:04.535 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:40:04.560 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:40:04.560 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 931 ms
2023-03-03 01:40:04.651 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2023-03-03 01:40:04.652 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:40:04.710 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-2 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:40:04.711 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2023-03-03 01:40:04.721 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:40:04.730 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:40:04.792 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:40:04.792 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:40:05.091 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:40:05.166 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:40:05.173 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:05.183 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:07.192 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400df7599893160830fafa8', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:40:07.311 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:40:07.381 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:40:07.482 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:40:13.883 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:40:15.934 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:40:15.934 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:40:15.935 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:40:16.406 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:16.406 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:40:16.430 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 3 JPA repository interfaces.
2023-03-03 01:40:16.432 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:16.432 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:40:16.438 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:16.438 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:16.438 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:16.438 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:40:16.517 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:40:16.579 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:40:16.579 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:40:16.579 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:40:16.602 - sdk-trade - INFO  --- [restartedMain] o.a.c.c.ContainerBase.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:40:16.602 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 663 ms
2023-03-03 01:40:16.656 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2023-03-03 01:40:16.656 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:40:16.674 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-3 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:40:16.675 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2023-03-03 01:40:16.682 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:40:16.688 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:40:16.736 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:40:16.736 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:40:16.938 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:40:16.993 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:40:17.000 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:17.009 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:18.689 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:40:18.729 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:40:18.799 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:40:19.024 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400df8099893160830fafa9', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:40:20.882 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:40:20.927 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:40:20.953 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:40:20.955 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:40:20.955 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:40:20.959 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:40:20.972 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:40:20.972 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:40:20.973 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:40:20.973 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778820973 with initial instances count: 0
2023-03-03 01:40:20.976 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:40:20.976 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778820976, current=UP, previous=STARTING]
2023-03-03 01:40:20.977 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:40:20.979 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:40:20.980 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:40:20.988 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:40:22.678 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 12.406 seconds (JVM running for 272.903)
2023-03-03 01:40:22.680 - sdk-trade - INFO  --- [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2023-03-03 01:40:29.018 - sdk-trade - INFO  --- [Thread-61] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application SDK-TRADE with eureka with status DOWN
2023-03-03 01:40:29.018 - sdk-trade - INFO  --- [Thread-61] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778829018, current=DOWN, previous=UP]
2023-03-03 01:40:29.018 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:40:33.673 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:40:35.130 - sdk-trade - INFO  --- [Thread-61] c.n.d.s.t.decorator.RedirectingEurekaHttpClient - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://127.0.0.1:48992/eureka/}, exception=I/O error on DELETE request for "http://127.0.0.1:48992/eureka/apps/SDK-TRADE/windows10.microdone.cn:sdk-trade:48124": Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://127.0.0.1:48992/eureka/apps/SDK-TRADE/windows10.microdone.cn:sdk-trade:48124": Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:785)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:94)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:82)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1058)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:309)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:251)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:629)
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:87)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	... 48 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 61 more

2023-03-03 01:40:35.130 - sdk-trade - WARN  --- [Thread-61] c.n.d.s.t.decorator.RetryableEurekaHttpClient - Request execution failed with message: I/O error on DELETE request for "http://127.0.0.1:48992/eureka/apps/SDK-TRADE/windows10.microdone.cn:sdk-trade:48124": Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:48992 [/127.0.0.1] failed: Connection refused: connect
2023-03-03 01:40:35.130 - sdk-trade - ERROR --- [Thread-61] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:972)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:948)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:389)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:347)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:177)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:196)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:189)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:212)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1161)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1106)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1075)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:172)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:94)
	at org.springframework.boot.builder.ParentContextCloserApplicationListener$ContextCloserListener.onApplicationEvent(ParentContextCloserApplicationListener.java:82)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:169)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:143)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1058)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1021)
	at org.springframework.boot.devtools.restart.Restarter.stop(Restarter.java:309)
	at org.springframework.boot.devtools.restart.Restarter.lambda$restart$1(Restarter.java:251)
	at org.springframework.boot.devtools.restart.Restarter$LeakSafeThread.run(Restarter.java:629)
2023-03-03 01:40:35.133 - sdk-trade - INFO  --- [Thread-61] com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-03 01:40:39.708 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:40:41.593 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:40:41.629 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:40:41.655 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:40:41.656 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:40:41.656 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:40:41.657 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:40:41.670 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:40:41.671 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:40:41.671 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:40:41.671 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778841671 with initial instances count: 0
2023-03-03 01:40:41.675 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:40:41.675 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778841675, current=UP, previous=STARTING]
2023-03-03 01:40:41.675 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:40:41.678 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:40:41.679 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:40:41.686 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:40:41.754 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:40:41.754 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:40:41.754 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:40:42.345 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:42.345 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:40:42.373 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 3 JPA repository interfaces.
2023-03-03 01:40:42.375 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:40:42.375 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:40:42.383 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:42.383 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:42.383 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:40:42.383 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:40:42.471 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:40:42.557 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:40:42.557 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:40:42.557 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:40:42.579 - sdk-trade - INFO  --- [restartedMain] o.a.c.c.ContainerBase.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:40:42.579 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 821 ms
2023-03-03 01:40:42.646 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2023-03-03 01:40:42.646 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:40:42.678 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-5 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:40:42.679 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2023-03-03 01:40:42.685 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:40:42.693 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:40:42.733 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:40:42.733 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:40:42.946 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:40:43.008 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:40:43.015 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:43.023 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:40:43.615 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 13.918 seconds (JVM running for 293.84)
2023-03-03 01:40:43.617 - sdk-trade - INFO  --- [restartedMain] o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2023-03-03 01:40:44.864 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:40:44.906 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:40:44.968 - sdk-trade - WARN  --- [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
2023-03-03 01:40:44.969 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:40:44.969 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2023-03-03 01:40:44.974 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2023-03-03 01:40:44.975 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2023-03-03 01:40:44.982 - sdk-trade - INFO  --- [restartedMain] o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2023-03-03 01:40:44.988 - sdk-trade - ERROR --- [restartedMain] org.springframework.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Initialization of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:628)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:447)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1356)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1345)
	at com.saidake.trade.TradeApp.main(TradeApp.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'springApplicationAdminRegistrar' defined in class path resource [org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class]: Invocation of init method failed; nested exception is javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:213)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:264)
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:221)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:138)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:421)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:378)
	at springfox.documentation.spring.web.WebMvcObjectMapperConfigurer.fireObjectMapperConfiguredEvent(WebMvcObjectMapperConfigurer.java:101)
	at springfox.documentation.spring.web.WebMvcObjectMapperConfigurer.configureMessageConverters(WebMvcObjectMapperConfigurer.java:73)
	at springfox.documentation.spring.web.WebMvcObjectMapperConfigurer.postProcessBeforeInitialization(WebMvcObjectMapperConfigurer.java:50)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:440)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	... 20 common frames omitted
Caused by: javax.management.InstanceAlreadyExistsException: org.springframework.boot:type=Admin,name=SpringApplication
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)
	at org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar.afterPropertiesSet(SpringApplicationAdminMXBeanRegistrar.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 37 common frames omitted
2023-03-03 01:41:11.685 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:41:11.685 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:41:11.685 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:41:11.685 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:41:11.685 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:41:11.686 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Application version is -1: false
2023-03-03 01:41:11.686 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:41:11.703 - sdk-trade - INFO  --- [DiscoveryClient-CacheRefreshExecutor-0] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:41:23.312 - sdk-trade - INFO  --- [Thread-70] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application SDK-TRADE with eureka with status DOWN
2023-03-03 01:41:23.313 - sdk-trade - INFO  --- [Thread-70] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778883313, current=DOWN, previous=UP]
2023-03-03 01:41:23.313 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:41:23.325 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:41:27.276 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:41:27.616 - sdk-trade - INFO  --- [Thread-70] com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-03 01:41:27.635 - sdk-trade - INFO  --- [Thread-70] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - deregister  status: 200
2023-03-03 01:41:27.637 - sdk-trade - INFO  --- [Thread-70] com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-03 01:41:35.801 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:41:37.907 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:41:37.907 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:41:37.909 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:41:38.913 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:41:38.913 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:41:38.976 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 3 JPA repository interfaces.
2023-03-03 01:41:38.982 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:41:38.982 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:41:38.990 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:41:38.990 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:41:38.991 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:41:38.991 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:41:39.244 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:41:39.660 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:41:39.665 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:41:39.665 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:41:39.666 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:41:39.750 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:41:39.750 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1828 ms
2023-03-03 01:41:39.927 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:41:39.929 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:41:40.008 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:41:40.011 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:41:40.048 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:41:40.086 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:41:40.209 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:41:40.321 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:41:40.826 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:41:40.839 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:41:41.453 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:41:41.629 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:41:41.726 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:41:41.741 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:41:43.600 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:41:43.695 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400dfd559f13f40ccb10475', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:41:43.799 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:41:43.937 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:41:46.304 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:41:46.368 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:41:46.412 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:41:46.440 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:41:46.443 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:41:46.460 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:41:46.461 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:41:47.737 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:41:47.739 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:41:47.740 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:41:47.743 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677778907743 with initial instances count: 1
2023-03-03 01:41:47.747 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:41:47.747 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677778907747, current=UP, previous=STARTING]
2023-03-03 01:41:47.749 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:41:47.749 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:41:47.764 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:41:47.765 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:41:47.785 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:41:49.596 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 18.05 seconds (JVM running for 20.067)
2023-03-03 01:42:18.635 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:42:18.636 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:42:18.637 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-03-03 01:42:18.662 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:42:20.779 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@1310053c instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@2c5d725b]). Returning all found instances.
2023-03-03 01:42:22.816 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:126)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:50)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$edf78560.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:45:35.413 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:45:37.516 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:45:37.517 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:45:37.518 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:45:38.416 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:45:38.416 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:45:38.477 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
2023-03-03 01:45:38.483 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:45:38.483 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:45:38.492 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:45:38.492 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:45:38.493 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:45:38.493 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:45:38.749 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:45:39.128 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:45:39.134 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:45:39.134 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:45:39.134 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:45:39.220 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:45:39.220 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1690 ms
2023-03-03 01:45:39.396 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:45:39.398 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:45:39.493 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:45:39.498 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:45:39.538 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:45:39.577 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:45:39.697 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:45:39.801 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:45:40.295 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:45:40.305 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:45:42.650 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:45:42.830 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:45:42.922 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:45:42.941 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:45:44.699 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:45:44.889 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400e0c61237490fc16f5f85', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:45:44.928 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:45:45.075 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:45:45.796 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:45:45.865 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:45:45.913 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:45:45.940 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:45:45.944 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:45:45.962 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:45:47.300 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:45:47.303 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:45:47.305 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:45:47.308 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677779147308 with initial instances count: 2
2023-03-03 01:45:47.312 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:45:47.312 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677779147312, current=UP, previous=STARTING]
2023-03-03 01:45:47.314 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:45:47.314 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:45:47.332 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:45:47.333 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:45:47.357 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:45:49.207 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.976 seconds (JVM running for 19.894)
2023-03-03 01:45:53.819 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:45:53.819 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:45:53.821 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2023-03-03 01:45:53.850 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:45:55.991 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@32f59ba1 instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@9d6de4b]). Returning all found instances.
2023-03-03 01:45:58.028 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:131)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:54)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$8dfd5fc2.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:48:07.425 - sdk-trade - INFO  --- [http-nio-48124-exec-3] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:48:09.451 - sdk-trade - WARN  --- [http-nio-48124-exec-3] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@fa3104e instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@9d6de4b]). Returning all found instances.
2023-03-03 01:48:11.487 - sdk-trade - ERROR --- [http-nio-48124-exec-3] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:131)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:54)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$8dfd5fc2.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:50:45.963 - sdk-trade - INFO  --- [AsyncResolver-bootstrap-executor-0] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:51:55.618 - sdk-trade - INFO  --- [http-nio-48124-exec-5] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:51:57.650 - sdk-trade - WARN  --- [http-nio-48124-exec-5] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@44052e0c instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@5382437]). Returning all found instances.
2023-03-03 01:51:59.695 - sdk-trade - ERROR --- [http-nio-48124-exec-5] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://sdk-generator/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:131)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:54)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$8dfd5fc2.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:52:21.117 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:52:23.218 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:52:23.219 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:52:23.220 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:52:24.114 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:52:24.115 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:52:24.176 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 3 JPA repository interfaces.
2023-03-03 01:52:24.182 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:52:24.182 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:52:24.189 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:52:24.190 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:52:24.190 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:52:24.190 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:52:24.436 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:52:24.806 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:52:24.812 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:52:24.813 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:52:24.813 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:52:24.901 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:52:24.901 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1669 ms
2023-03-03 01:52:25.067 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:52:25.068 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:52:25.166 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:52:25.170 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:52:25.205 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:52:25.243 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:52:25.357 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:52:25.462 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:52:25.962 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:52:25.972 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:52:28.238 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:52:28.414 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:52:28.502 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:52:28.518 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:52:30.279 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:52:30.473 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:52:30.482 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400e25ce2d2c46db1be13d6', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:52:30.606 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:52:31.313 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:52:31.374 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:52:31.418 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:52:31.445 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:52:31.449 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:52:31.467 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:52:31.467 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:52:31.467 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:52:31.467 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:52:31.467 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:52:31.468 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:52:31.468 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:52:32.759 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:52:32.762 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:52:32.763 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:52:32.766 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677779552766 with initial instances count: 2
2023-03-03 01:52:32.770 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:52:32.770 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677779552770, current=UP, previous=STARTING]
2023-03-03 01:52:32.772 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:52:32.772 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:52:32.788 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:52:32.788 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:52:32.809 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:52:34.557 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.581 seconds (JVM running for 19.474)
2023-03-03 01:52:39.742 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:52:39.743 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:52:39.744 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-03-03 01:52:39.769 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:52:41.895 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@61822f5 instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@86091ef]). Returning all found instances.
2023-03-03 01:52:43.937 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:131)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:54)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$5ed7c281.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:55:40.027 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:55:42.147 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:55:42.147 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:55:42.149 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:55:43.200 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:55:43.201 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:55:43.272 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 3 JPA repository interfaces.
2023-03-03 01:55:43.278 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:55:43.278 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:55:43.286 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:55:43.287 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:55:43.287 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:55:43.287 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:55:43.553 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:55:44.014 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:55:44.020 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:55:44.021 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:55:44.021 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:55:44.126 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:55:44.126 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1963 ms
2023-03-03 01:55:44.316 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:55:44.318 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:55:44.397 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:55:44.401 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:55:44.445 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:55:44.499 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:55:44.655 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:55:44.777 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:55:45.437 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:55:45.451 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:55:47.804 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:55:48.000 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:55:48.100 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:55:48.116 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:55:49.866 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:55:50.079 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400e323b781825754afbabd', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:55:50.082 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:55:50.223 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:55:50.971 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:55:51.048 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:55:51.097 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:55:51.130 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:55:51.134 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:55:51.153 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:55:51.154 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:55:52.488 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:55:52.492 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:55:52.494 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:55:52.498 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677779752498 with initial instances count: 2
2023-03-03 01:55:52.502 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:55:52.502 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677779752502, current=UP, previous=STARTING]
2023-03-03 01:55:52.504 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:55:52.504 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:55:52.522 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:55:52.523 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:55:52.548 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:55:54.335 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 18.429 seconds (JVM running for 20.567)
2023-03-03 01:56:02.930 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:56:02.931 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:56:02.932 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-03-03 01:56:02.965 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:56:52.920 - sdk-trade - WARN  --- [DiscoveryClient-1] com.netflix.discovery.TimedSupervisorTask - task supervisor timed out
java.util.concurrent.TimeoutException: null
	at java.util.concurrent.FutureTask.get(FutureTask.java:205)
	at com.netflix.discovery.TimedSupervisorTask.run(TimedSupervisorTask.java:68)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:56:58.799 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@251778c instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@3e7cf46b]). Returning all found instances.
2023-03-03 01:57:11.347 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:131)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:54)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$58dcd0d3.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2023-03-03 01:58:16.160 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Unregistering application SDK-TRADE with eureka with status DOWN
2023-03-03 01:58:16.160 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677779896160, current=DOWN, previous=UP]
2023-03-03 01:58:16.160 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:58:16.174 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:58:17.302 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:58:17.305 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2023-03-03 01:58:17.311 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2023-03-03 01:58:17.312 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
2023-03-03 01:58:20.322 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Unregistering ...
2023-03-03 01:58:20.339 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - deregister  status: 200
2023-03-03 01:58:20.341 - sdk-trade - INFO  --- [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient - Completed shut down of DiscoveryClient
2023-03-03 01:58:28.483 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Fetching config from server at : http://localhost:8888
2023-03-03 01:58:30.602 - sdk-trade - INFO  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Connect Timeout Exception on Url - http://localhost:8888. Will be trying the next url if available
2023-03-03 01:58:30.603 - sdk-trade - WARN  --- [restartedMain] o.s.c.c.client.ConfigServicePropertySourceLocator - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/sdk-trade/default": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect
2023-03-03 01:58:30.604 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - The following profiles are active: dev
2023-03-03 01:58:31.484 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:58:31.485 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-03-03 01:58:31.550 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 58 ms. Found 3 JPA repository interfaces.
2023-03-03 01:58:31.556 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-03-03 01:58:31.556 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2023-03-03 01:58:31.564 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.CronRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:58:31.565 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestPersonRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:58:31.565 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data MongoDB - Could not safely identify store assignment for repository candidate interface com.saidake.trade.repository.TestStudentRepository. If you want this repository to be a MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.MongoRepository.
2023-03-03 01:58:31.565 - sdk-trade - INFO  --- [restartedMain] o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 MongoDB repository interfaces.
2023-03-03 01:58:31.812 - sdk-trade - INFO  --- [restartedMain] o.springframework.cloud.context.scope.GenericScope - BeanFactory id=86bfe713-e3e0-3cd8-81ad-650682dd9ab7
2023-03-03 01:58:32.186 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 48124 (http)
2023-03-03 01:58:32.192 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-48124"]
2023-03-03 01:58:32.192 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardService - Starting service [Tomcat]
2023-03-03 01:58:32.192 - sdk-trade - INFO  --- [restartedMain] org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.56]
2023-03-03 01:58:32.274 - sdk-trade - INFO  --- [restartedMain] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2023-03-03 01:58:32.274 - sdk-trade - INFO  --- [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1658 ms
2023-03-03 01:58:32.435 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2023-03-03 01:58:32.436 - sdk-trade - WARN  --- [restartedMain] com.zaxxer.hikari.util.DriverDataSource - Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2023-03-03 01:58:32.523 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Driver does not support get/set network timeout for connections. (oracle.jdbc.driver.T4CConnection.getNetworkTimeout()I)
2023-03-03 01:58:32.526 - sdk-trade - INFO  --- [restartedMain] com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2023-03-03 01:58:32.562 - sdk-trade - INFO  --- [restartedMain] org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2023-03-03 01:58:32.601 - sdk-trade - INFO  --- [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 5.4.33
2023-03-03 01:58:32.720 - sdk-trade - INFO  --- [restartedMain] org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-03-03 01:58:32.826 - sdk-trade - INFO  --- [restartedMain] org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.Oracle12cDialect
2023-03-03 01:58:33.306 - sdk-trade - INFO  --- [restartedMain] o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-03-03 01:58:33.316 - sdk-trade - INFO  --- [restartedMain] o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-03-03 01:58:35.589 - sdk-trade - WARN  --- [restartedMain] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-03-03 01:58:35.759 - sdk-trade - INFO  --- [restartedMain] org.mongodb.driver.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
2023-03-03 01:58:35.848 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:58:35.864 - sdk-trade - WARN  --- [restartedMain] org.springframework.data.convert.CustomConversions - Registering converter from class java.time.LocalDateTime to class org.joda.time.LocalDateTime as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.
2023-03-03 01:58:37.586 - sdk-trade - INFO  --- [restartedMain] o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
2023-03-03 01:58:37.801 - sdk-trade - INFO  --- [restartedMain] org.ehcache.core.EhcacheManager - Cache 'testCache' created in EhcacheManager.
2023-03-03 01:58:37.834 - sdk-trade - INFO  --- [cluster-ClusterId{value='6400e3cb251f0a2388f22e76', description='null'}-localhost:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:107)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65)
	... 4 common frames omitted
2023-03-03 01:58:37.939 - sdk-trade - WARN  --- [restartedMain] o.s.b.d.autoconfigure.OptionalLiveReloadServer - Unable to start LiveReload server
2023-03-03 01:58:38.634 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2023-03-03 01:58:38.699 - sdk-trade - WARN  --- [restartedMain] o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2023-03-03 01:58:38.743 - sdk-trade - INFO  --- [restartedMain] o.s.cloud.netflix.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2023-03-03 01:58:38.773 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2023-03-03 01:58:38.778 - sdk-trade - INFO  --- [restartedMain] c.n.d.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2023-03-03 01:58:38.797 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Disable delta property : false
2023-03-03 01:58:38.797 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2023-03-03 01:58:38.797 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2023-03-03 01:58:38.797 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application is null : false
2023-03-03 01:58:38.797 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2023-03-03 01:58:38.798 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Application version is -1: true
2023-03-03 01:58:38.798 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2023-03-03 01:58:40.137 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - The response status is 200
2023-03-03 01:58:40.139 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2023-03-03 01:58:40.141 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2023-03-03 01:58:40.146 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1677779920145 with initial instances count: 1
2023-03-03 01:58:40.151 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.serviceregistry.EurekaServiceRegistry - Registering application SDK-TRADE with eureka with status UP
2023-03-03 01:58:40.151 - sdk-trade - INFO  --- [restartedMain] com.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1677779920151, current=UP, previous=STARTING]
2023-03-03 01:58:40.153 - sdk-trade - INFO  --- [restartedMain] org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-48124"]
2023-03-03 01:58:40.153 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124: registering service...
2023-03-03 01:58:40.169 - sdk-trade - INFO  --- [restartedMain] o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 48124 (http) with context path ''
2023-03-03 01:58:40.169 - sdk-trade - INFO  --- [restartedMain] o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 48124
2023-03-03 01:58:40.190 - sdk-trade - INFO  --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient - DiscoveryClient_SDK-TRADE/windows10.microdone.cn:sdk-trade:48124 - registration status: 204
2023-03-03 01:58:42.008 - sdk-trade - INFO  --- [restartedMain] com.saidake.trade.TradeApp - Started TradeApp in 17.527 seconds (JVM running for 19.344)
2023-03-03 01:58:51.022 - sdk-trade - INFO  --- [http-nio-48124-exec-1] o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-03-03 01:58:51.023 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2023-03-03 01:58:51.024 - sdk-trade - INFO  --- [http-nio-48124-exec-1] org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2023-03-03 01:58:51.051 - sdk-trade - INFO  --- [http-nio-48124-exec-1] com.saidake.trade.controller.TestController - id：null
2023-03-03 01:58:53.188 - sdk-trade - WARN  --- [http-nio-48124-exec-1] o.s.c.l.core.RetryAwareServiceInstanceListSupplier - No instances found after removing previously used service instance from the search ([EurekaServiceInstance@26fd5fef instance = InstanceInfo [instanceId = windows10.microdone.cn:sdk-generator:48123, appName = SDK-GENERATOR, hostName = windows10.microdone.cn, status = UP, ipAddr = 192.168.22.1, port = 48123, securePort = 443, dataCenterInfo = com.netflix.appinfo.MyDataCenterInfo@ff851de]). Returning all found instances.
2023-03-03 01:58:55.227 - sdk-trade - ERROR --- [http-nio-48124-exec-1] o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://SDK-GENERATOR/test": Connection refused: connect; nested exception is java.net.ConnectException: Connection refused: connect] with root cause
java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at java.net.Socket.connect(Socket.java:538)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:463)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:558)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:242)
	at sun.net.www.http.HttpClient.New(HttpClient.java:339)
	at sun.net.www.http.HttpClient.New(HttpClient.java:357)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1220)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1156)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1050)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:984)
	at org.springframework.http.client.SimpleBufferingClientHttpRequest.executeInternal(SimpleBufferingClientHttpRequest.java:76)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:109)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory.lambda$createRequest$0(LoadBalancerRequestFactory.java:58)
	at org.springframework.cloud.client.loadbalancer.LoadBalancerRequestAdapter.apply(LoadBalancerRequestAdapter.java:43)
	at org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient.execute(BlockingLoadBalancerClient.java:93)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.lambda$intercept$2(RetryLoadBalancerInterceptor.java:129)
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:329)
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:225)
	at org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor.intercept(RetryLoadBalancerInterceptor.java:79)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:93)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:77)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:776)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:602)
	at org.springframework.web.client.RestTemplate$$FastClassBySpringCGLIB$$aa4e9ed0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.web.client.RestTemplate$$EnhancerBySpringCGLIB$$d0cd5421.exchange(<generated>)
	at com.saidake.trade.controller.TestController.requestOtherService(TestController.java:134)
	at com.saidake.trade.controller.TestController.getTest(TestController.java:57)
	at com.saidake.trade.controller.TestController$$FastClassBySpringCGLIB$$3ea1e20d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.saidake.trade.controller.TestController$$EnhancerBySpringCGLIB$$fd5d88b1.getTest(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:645)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:750)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
